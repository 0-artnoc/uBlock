 /* External CSS values override */
.fa-icon {
    padding: 0 0.1em;
    }
.fa-icon.fa-icon-badged > .fa-icon-badge {
    bottom: auto;
    top: -20%;
    }

/* Internal CSS values */
:root body,
:root.mobile body {
    --popup-default-gap: 1em;
    font-size: 14px;
    line-height: 20px;
    transition-duration: 0.2s;
    transition-property: opacity;
    width: 100%;
    }
:root body.loading {
    opacity: 0;
    }
a {
    color: inherit;
    text-decoration: none;
    }
:focus {
    outline: 0;
    }

#panes {
    align-items: stretch;
    display: flex;
    flex-direction: column;
    padding: 0;
    position: relative;
    width: 100%;
    }
hr {
    border: 0;
    border-top: 1px solid #e3e2e3;
    margin: 0;
    padding: 0;
    }
.fa {
    font-size: 120%;
    }

#sticky {
    background-color: var(--default-surface);
    position: sticky;
    top: 0;
    z-index: 100;
    }
#stickyTools {
    align-items: stretch;
    display: flex;
    justify-content: space-between;
    margin: 0.5em 0.5em var(--popup-default-gap) 0.5em;
    }
#switch {
    display: flex;
    flex-grow: 3;
    justify-content: center;
    }
#switch .fa-icon {
    color: var(--popup-power-ink);
    fill: var(--popup-power-ink);
    cursor: pointer;
    font-size: 700%;
    margin: 0;
    padding: 0;
    }
body.off #switch .fa-icon {
    color: var(--fg-0-20);
    fill: var(--fg-0-20);
    }
.rulesetTools {
    background-color: transparent;
    border: 0;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    flex-grow: 2;
    justify-content: space-evenly;
    }
.rulesetTools [id] {
    background-color: var(--bg-transient-notice);
    border: 1px solid #ddc;
    border-radius: 4px;
    cursor: pointer;
    fill: var(--default-ink-a50);
    flex-grow: 1;
    font-size: 2.2em;
    padding: 0;
    visibility: hidden;
    }
.rulesetTools [id]:not(:first-of-type) {
    margin-top: 0.2em;
    }
body.needReload #refresh,
body.needSave #saveRules,
body.needSave #revertRules {
    visibility: visible;
    }
#hostname {
    margin: var(--popup-default-gap) 0.2em;
    text-align: center;
    }
#hostname > span + span {
    font-weight: 600;
    }

.itemRibbon {
    display: grid;
    gap: var(--popup-default-gap);
    grid-template: auto / auto auto;
    margin: var(--popup-default-gap);
    }
.itemRibbon > [data-i18n] + span {
    justify-self: end;
    text-align: end;
    white-space: nowrap;
    }

.toolRibbon {
    align-items: start;
    display: grid;
    grid-auto-columns: 1fr;
    grid-auto-flow: column;
    grid-template: auto / repeat(4, 1fr);
    justify-items: center;
    margin: var(--popup-default-gap) 0;
    white-space: normal;
    }
.toolRibbon .tool {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    font-size: 1.4em;
    min-width: 32px;
    padding: 0 0.5em;
    unicode-bidi: embed;
    visibility: hidden;
    }
.toolRibbon .tool.enabled {
    visibility: visible;
    }
.toolRibbon .tool .caption {
    font: 10px/12px sans-serif;
    margin-top: 0.5em;
    text-align: center;
    }
body.mobile.no-tooltips .toolRibbon .tool {
    font-size: 1.6em;
    }

#extraTools .fa-icon {
    align-self: center;
    position: relative;
    }
#extraTools .fa-icon > .nope {
    height: 1.1em;
    left: 50%;
    position: absolute;
    stroke: var(--popup-icon-x-ink);
    stroke-width: 2;
    transform: translateX(-50%);
    visibility: hidden;
    width: 1.1em;
    }
#extraTools > span.on .fa-icon >.nope {
    visibility: visible;
    }

.moreOrLess {
    margin: 0;
    }
.moreOrLess > span {
    cursor: pointer;
    padding: var(--popup-default-gap);
    }
#moreButton .fa-icon {
    transform: rotate(180deg);
    }
#lessButton {
    text-align: right;
    }
body[data-more="a b c d e"] #moreButton {
    pointer-events: none;
    visibility: hidden;
    }
body[data-more=""] #lessButton {
    pointer-events: none;
    visibility: hidden;
    }

#tooltip {
    background-color: var(--bg-tooltip);
    border: 1px solid gray;
    border-radius: 3px;
    box-shadow: 1px 1px 3px gray;
    box-sizing: border-box;
    color: var(--fg-tooltip);
    cursor: pointer;
    direction: ltr;
    font: 12px sans-serif;
    left: 5%;
    line-height: 130%;
    margin: 0.5em 0;
    opacity: 0;
    padding: 4px 6px;
    pointer-events: none;
    position: absolute;
    text-align: center;
    visibility: hidden;
    white-space: pre-line;
    width: 90%;
    z-index: 100;
    }
body[dir="rtl"] #tooltip {
    direction: rtl;
    }
#tooltip.show {
    transition: opacity 0.15s 0.5s;
    -webkit-transition: opacity 0.15s 0.5s;
    visibility: visible;
    opacity: 1;
    }

#firewall {
    border: 0;
    flex-shrink: 0;
    font-size: 90%;
    margin: 0;
    padding: 0;
    overflow: hidden;
    text-align: right;
    --rule-cell-width: 5em;
    }
#firewall > div {
    border: 0;
    direction: ltr;
    display: flex;
    justify-content: flex-end;
    margin: 0;
    margin-top: 1px;
    padding: 0;
    }
#firewall > div:first-child {
    margin-top: 0;
    }
#firewall > div:first-child ~ div[data-des="*"] {
    display: none;
    }
#firewall:not(.expanded) > div.isSubDomain:not(.expandException):not(.isRootContext),
#firewall.expanded > div.isSubDomain.expandException:not(.isRootContext) {
    display: none;
    }
#firewall > div > span,
#actionSelector > #dynaCounts {
    background-color: var(--bg-popup-cell-2);
    border: none;
    box-sizing: border-box;
    display: inline-flex;
    padding: 0.4em 0;
    position: relative;
    }
#firewall > div:first-of-type > span:first-of-type {
    cursor: pointer;
    flex-direction: unset;
    }
#firewall > div > span:first-of-type {
    align-items: flex-end;
    flex-direction: column;
    flex-grow: 1;
    justify-content: flex-end;
    padding-right: 2px;
    white-space: normal;
    width: calc(100% - var(--rule-cell-width));
    word-break: break-word;
    }
#firewall > div.isCname > span:first-of-type {
    color: var(--fg-popup-cell-cname);
    }
#firewall > div > span:first-of-type > sub {
    display: inline-block;
    font-size: 85%;
    font-weight: normal;
    padding: 0.25em 0 0 0;
    }
#firewall > div > span:first-of-type > sub:empty {
    display: none;
    }
#firewall > div > span:first-of-type ~ span {
    flex-shrink: 0;
    margin-left: 1px;
    width: var(--rule-cell-width);
    }
#firewall > div > span:nth-of-type(2) {
    display: none;
    }
#firewall > div > span:nth-of-type(3),
#firewall > div > span:nth-of-type(4) {
    color: var(--fg-0-70);
    display: none;
    font-family: monospace;
    text-align: center;
    }
#firewall > div.isDomain > span:first-of-type {
    font-weight: 600;
    }
#firewall > div:first-of-type > span:first-of-type::before {
    color: var(--fg-0-50);
    content: '+';
    padding-right: 0.25em;
    }
#firewall.expanded > div:first-of-type > span:first-of-type::before {
    content: '\2012';
    }
#firewall > div[data-des="*"] > span:nth-of-type(3),
#firewall > div.isSubDomain > span:nth-of-type(3),
#firewall > div.isSubDomain.isRootContext > span:nth-of-type(3),
#firewall.expanded > div:not(.expandException) > span:nth-of-type(3),
#firewall:not(.expanded) > div.expandException > span:nth-of-type(3),
#firewall:not(.expanded) > div.isDomain:not(.expandException) > span:nth-of-type(4),
#firewall.expanded > div.isDomain.expandException > span:nth-of-type(4),
#actionSelector > #dynaCounts {
    display: inline-flex;
    justify-content: space-between;
    }
#firewall > div > span[data-acount]::before,
#firewall > div > span[data-bcount]::after,
#firewall > div > span[data-acount] > #actionSelector > #dynaCounts::before,
#firewall > div > span[data-acount] > #actionSelector > #dynaCounts::after {
    content: ' ';
    }
#firewall > div > span[data-acount]::before,
#firewall > div > span[data-acount] > #actionSelector > #dynaCounts::before {
    padding-left: 0.1em;
    }
#firewall > div > span[data-acount="1"]::before,
#firewall > div > span[data-acount="1"] > #actionSelector > #dynaCounts::before {
    content: '+';
    }
#firewall > div > span[data-acount="2"]::before,
#firewall > div > span[data-acount="2"] > #actionSelector > #dynaCounts::before {
    content: '++';
    }
#firewall > div > span[data-acount="3"]::before,
#firewall > div > span[data-acount="3"] > #actionSelector > #dynaCounts::before {
    content: '+++';
    }
#firewall > div > span[data-bcount]::after,
#firewall > div > span[data-bcount] > #actionSelector > #dynaCounts::after {
    padding-right: 0.1em;
    }
#firewall > div > span[data-bcount="1"]::after,
#firewall > div > span[data-bcount="1"] > #actionSelector > #dynaCounts::after {
    content: '\2212';
    }
#firewall > div > span[data-bcount="2"]::after,
#firewall > div > span[data-bcount="2"] > #actionSelector > #dynaCounts::after {
    content: '\2212\2212';
    }
#firewall > div > span[data-bcount="3"]::after,
#firewall > div > span[data-bcount="3"] > #actionSelector > #dynaCounts::after {
    content: '\2212\2212\2212';
    }

body.advancedUser #firewall > div > span:first-of-type {
    width: calc(100% - 2 * var(--rule-cell-width));
    }
body.advancedUser #firewall > div > span:nth-of-type(2) {
    display: inline-flex;
    }
body.advancedUser #firewall > div:first-child ~ div[data-des="*"] {
    display: flex;
    }
body.advancedUser #firewall > div > span:first-of-type ~ span {
    cursor: pointer;
    }

/**
 Small coloured label at the left of a row
 */
#firewall > div.isRootContext > span:first-of-type::before,
#firewall > div.allowed > span:first-of-type::before,
#firewall > div.blocked > span:first-of-type::before,
#firewall:not(.expanded) > div.isDomain.totalAllowed:not(.expandException) > span:first-of-type::before,
#firewall:not(.expanded) > div.isDomain.totalBlocked:not(.expandException) > span:first-of-type::before,
#firewall.expanded > div.isDomain.totalAllowed.expandException > span:first-of-type::before,
#firewall.expanded > div.isDomain.totalBlocked.expandException > span:first-of-type::before {
    box-sizing: border-box;
    content: '';
    display: inline-block;
    filter: var(--bg-popup-cell-label-filter);
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 7px;
    }
#firewall > div.isRootContext > span:first-of-type::before {
    background-color: var(--fg-0-50);
    width: 14px !important;
    }
#firewall > div.allowed > span:first-of-type::before,
#firewall > div.isDomain.totalAllowed > span:first-of-type::before {
    background-color: var(--bg-popup-cell-allow-own);
    }
#firewall > div.blocked > span:first-of-type::before,
#firewall > div.isDomain.totalBlocked > span:first-of-type::before {
    background-color: var(--bg-popup-cell-block-own);
    }
#firewall > div.allowed.blocked > span:first-of-type::before,
#firewall > div.isDomain.totalAllowed.totalBlocked > span:first-of-type::before {
    background-color: var(--bg-popup-cell-label-mixed);
    }
/* Rule cells */
body.advancedUser #firewall > div > span.allowRule,
#actionSelector > #dynaAllow {
    background-color: var(--bg-popup-cell-allow);
    }
body.advancedUser #firewall > div > span.blockRule,
#actionSelector > #dynaBlock {
    background-color: var(--bg-popup-cell-block);
    }
body.advancedUser #firewall > div > span.noopRule,
#actionSelector > #dynaNoop {
    background-color: var(--bg-popup-cell-noop);
    }
body.advancedUser #firewall > div > span.ownRule,
#firewall > div > span.ownRule {
    color: var(--default-surface);
    }
body.advancedUser #firewall > div > span.allowRule.ownRule,
:root.desktop #actionSelector > #dynaAllow:hover {
    background-color: var(--bg-popup-cell-allow-own);
    }
body.advancedUser #firewall > div > span.blockRule.ownRule,
:root.desktop #actionSelector > #dynaBlock:hover {
    background-color: var(--bg-popup-cell-block-own);
    }
body.advancedUser #firewall > div > span.noopRule.ownRule,
:root.desktop #actionSelector > #dynaNoop:hover {
    background-color: var(--bg-popup-cell-noop-own);
    }

#actionSelector {
    box-sizing: border-box;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 1;
    }
#actionSelector > span {
    display: inline-block;
    height: 100%;
    }
#actionSelector > #dynaAllow {
    width: 33%;
    }
#actionSelector > #dynaNoop {
    width: 33.5%;
    }
#actionSelector > #dynaBlock {
    width: 33.5%;
    }
#actionSelector > #dynaCounts {
    background-color: transparent;
    height: 100%;
    left: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 100%;
    }

/* configurable UI elements */
:root.desktop .toolRibbon .caption,
:root.mobile body.no-tooltips .toolRibbon .caption,
:root.mobile body[data-ui~="-captions"] .toolRibbon .caption {
    display: none;
    }
:root.mobile .toolRibbon .caption,
:root.desktop body[data-ui~="+captions"] .toolRibbon .caption {
    display: inherit;
    }
:root.mobile #no-popups,
:root body[data-ui~="-no-popups"] #no-popups {
    display: none;
    }
:root.desktop #no-popups,
:root body[data-ui~="+no-popups"] #no-popups {
    display: flex;
    }
body:not([data-more~="a"]) [data-more="a"],
body:not([data-more~="b"]) [data-more="b"],
body:not([data-more~="c"]) [data-more="c"],
body:not([data-more~="e"]) [data-more="e"] {
    height: 0;
    margin-bottom: 0;
    margin-top: 0;
    overflow-y: hidden;
    visibility: hidden;
    }
body:not([data-more~="d"]) [data-more="d"] {
    display: none;
    }

/* mouse-driven devices */
:root.desktop {
    overflow: hidden;
    }
:root.desktop body {
    --popup-default-gap: 0.8em;
    max-width: max(100vw, 800px);
    }
:root.desktop #panes {
    flex-direction: row-reverse;
    width: unset;
    }
:root.desktop #main {
    max-width: 300px;
    width: max-content;
    }
:root.desktop #switch .fa-icon:hover {
    color: var(--popup-power-ink-hover);
    fill: var(--popup-power-ink-hover);
    }
:root.desktop .rulesetTools [id]:hover {
    fill: var(--default-ink);
    }
:root.desktop #firewall {
    direction: rtl;
    flex-grow: 1;
    line-height: 1.4;
    max-height: max(100vh, 600px);
    min-width: 360px;
    overflow-y: auto;
    width: min-content;
    }
:root.desktop .tool {
    padding: 0.5em;
    }
:root.desktop .tool:hover {
    background-color: var(--button-surface);
    }
:root.desktop .moreOrLess > span:hover {
    background-color: var(--button-surface);
    }
